# For this project, I downloaded a chinook database
# which represents a digital media store and
# opened the dataset in SQLite Studio.

# First, I wanted to list all the Customers of chinook
# who are not from the US, as well as those from 
# Brazil with their CustomerId and Email.

SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country <> 'USA'
ORDER BY CustomerId;

SELECT FirstName, LastName, CustomerId, Country, Email
FROM chinook.customers
WHERE Country = 'Brazil'
ORDER BY CustomerId;

# Next, I displayed the Invoice information of customers in Brazil.

SELECT customers.FirstName, customers.LastName, 
invoices.InvoiceId, invoices.InvoiceDate, invoices.BillingCountry
FROM chinook.customers
LEFT JOIN chinook.invoices ON customers.CustomerId=invoices.CustomerId
WHERE invoices.BillingCountry='Brazil';

# Then, I wanted to know which Employees held the title of Sales Support Agent
# which invoices/Customer they were associated with, and the total of their invoice.

SELECT EmployeeId, LastName, FirstName,
BirthDate, HireDate
FROM chinook.employees
WHERE Title='Sales Support Agent';

SELECT emp.FirstName, emp.LastName, Inv.InvoiceId, 
cust.CustomerId, cust.FirstName, cust.LastName, Inv.Total
FROM chinook.employees AS emp
JOIN chinook.customers cust ON cust.SupportRepId=emp.EmployeeId
JOIN chinook.invoices Inv ON Inv.CustomerId=cust.CustomerId;

# For the sum of invoices from 2009 as well as the total paid for that year:

SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

SELECT SUM(Total)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

# For the purchased song tracks with the Artist's name and Invoice ID:

SELECT ar.name as Artist, t.Name as Track, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;

# For a detailed breakdown on each song with their Album Name, Composer,
# Price, and Media Type:

SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
on a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m
on m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
on g.GenreId = t.GenreId;

# I also wanted to know the total sales of each Sales Rep,
# as well as the employee that made the highest sales in 2009.

SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales'
FROM chinook.customers cust
JOIN chinook.employees emp ON emp.EmployeeId=cust.SupportRepId
JOIN chinook.Invoices Inv ON inv.CustomerId=cust.CustomerId
WHERE emp.Title= 'Sales Support Agent'
GROUP BY emp.FirstName;

SELECT emp.FirstName, emp.LastName,
ROUND(SUM(inv.Total), 2) as 'Total Sales'
FROM chinook.employees emp
JOIN chinook.customers cust ON emp.EmployeeId=cust.SupportRepId
JOIN chinook.invoices inv ON inv.CustomerId=cust.CustomerId
WHERE emp.Title= 'Sales Support Agent'
AND inv.InvoiceDate LIKE '2009%'
GROUP BY emp.FirstName
ORDER BY ROUND(SUM(inv.Total), 2) DESC LIMIT 1;

# Finally, I wanted to know the price of each track in the database
# and the sum total of its sales from every invoice.

SELECT tracks.Name AS 'Title', genres.Name AS 'Genre', 
SUM(inv.UnitPrice) AS 'Price', ROUND(SUM(invoices.Total), 2) AS 'Sales Figure'
FROM chinook.tracks
JOIN chinook.genres ON tracks.GenreId=genres.GenreId
JOIN chinook.invoice_items inv ON tracks.TrackId=inv.TrackId
JOIN chinook.invoices ON inv.InvoiceId=invoices.InvoiceId
GROUP BY tracks.Name
ORDER BY SUM(inv.UnitPrice) DESC
